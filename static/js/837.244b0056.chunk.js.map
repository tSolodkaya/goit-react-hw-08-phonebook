{"version":3,"file":"static/js/837.244b0056.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Error/Error.jsx","webpack://react-homework-template/./src/components/NoContact/NoContact.module.css?33ed","components/NoContact/NoContact.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"addButton\":\"ContactForm_addButton__zGNsx\"};","export const getContact = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\n\nimport css from './ContactForm.module.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContact } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const stateContacts = useSelector(getContact);\n\n  const dispatch = useDispatch();\n\n  const handleChangeInput = event => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n\n    switch (inputName) {\n      case 'name':\n        setName(inputValue);\n        break;\n      case 'number':\n        setNumber(inputValue);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isContactInBook = stateContacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isContactInBook) {\n      return Notiflix.Notify.failure(`${name} is already in contacts`);\n    }\n    console.log(stateContacts);\n\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContact(contact));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChangeInput}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Phone number\n        <input\n          className={css.formInput}\n          type=\"phone\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChangeInput}\n        />\n      </label>\n      <button className={css.addButton} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactListItem_listItem__upGA2\",\"deleteBtn\":\"ContactListItem_deleteBtn__roUYm\",\"contactName\":\"ContactListItem_contactName__kCRjB\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport css from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li key={id} className={css.listItem}>\n      <p className={css.contactName}>{name}:</p>\n      <p>{number}</p>\n\n      <button\n        className={css.deleteBtn}\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"list\":\"ContactList_list__csErn\"};","import PropTypes from 'prop-types';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <div className={css.contactList}>\n      <ul className={css.list}>\n        {contacts.map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterName\":\"Filter_filterName__Y2kKA\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/contactSlice';\nimport css from './Filter.module.css';\n\nconst Filter = ({ nameForFind }) => {\n  const dispatch = useDispatch();\n  return (\n    <div className={css.filterContainer}>\n      <label className={css.filterName}>\n        Find contacts by name\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          value={nameForFind}\n          onChange={event =>\n            dispatch(filterContacts.filterContacts(event.target.value))\n          }\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  nameForFind: PropTypes.string.isRequired,\n  onFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import css from './Error.module.css';\n\nconst Error = () => {\n  <div className={css.nocontact}>Ooops, something went wrong....</div>;\n};\n\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"nocontact\":\"NoContact_nocontact__PUmgF\"};","import css from './NoContact.module.css';\n\nconst NoContact = () => {\n  return <div className={css.nocontact}>No contacts to show</div>;\n};\n\nexport default NoContact;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Error from 'components/Error/Error';\nimport Loader from 'components/Loader/Loader';\n\nimport {\n  getContact,\n  getError,\n  getFilter,\n  getIsLoading,\n} from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport NoContact from 'components/NoContact/NoContact';\n\nconst Contacts = () => {\n  const stateContacts = useSelector(getContact);\n  const stateFilter = useSelector(getFilter);\n  const isLoading = useSelector(getIsLoading);\n  const isError = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const normilizedFilter = stateFilter.toLowerCase();\n  const visibleContacts = stateContacts.filter(contact => {\n    return contact.name.toLowerCase().includes(normilizedFilter);\n  });\n  return (\n    <main>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      {isLoading && <Loader />}\n\n      {isError && <Error />}\n\n      {stateContacts.length > 0 && <Filter nameForFind={stateFilter} />}\n\n      <h2>Contact List </h2>\n      {visibleContacts.length > 0 ? (\n        <ContactList contacts={visibleContacts} />\n      ) : (\n        <NoContact />\n      )}\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContact","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","useState","name","setName","number","setNumber","stateContacts","useSelector","dispatch","useDispatch","handleChangeInput","event","inputName","target","inputValue","value","className","css","onSubmit","preventDefault","isContactInBook","some","contact","toLowerCase","Notiflix","console","log","addContact","type","pattern","title","required","onChange","id","onClick","deleteContact","map","nameForFind","filterContacts","stateFilter","isError","useEffect","fetchContacts","normilizedFilter","visibleContacts","includes","Loader","length"],"sourceRoot":""}